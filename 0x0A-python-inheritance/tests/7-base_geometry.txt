==========
Test base_geometry.py
==========

Testing BaseGeometry Class
--------------------------

1. Check instantiation:

Create an instance of BaseGeometry:

.. code-block:: python

    >>> BaseGeometry = __import__("7-base_geometry").BaseGeometry
    >>> geom = BaseGeometry()
    >>> isinstance(geom, BaseGeometry)
    True

2. Test area method:

Check that calling the area method raises the appropriate exception:

.. code-block:: python

    >>> geom.area()
    Traceback (most recent call last):
        ...
    Exception: area() is not implemented

3. Test integer_validator method:

Ensure integer_validator validates input correctly:

Valid positive integer:

.. code-block:: python

    >>> geom.integer_validator("age", 10)

Non-integer input:

.. code-block:: python

    >>> geom.integer_validator("age", "10")
    Traceback (most recent call last):
        ...
    TypeError: age must be an integer

Non-positive integer:

.. code-block:: python

    >>> geom.integer_validator("age", 0)
    Traceback (most recent call last):
        ...
    ValueError: age must be greater than 0

    >>> geom.integer_validator("age", -5)
    Traceback (most recent call last):
        ...
    ValueError: age must be greater than 0

Other invalid types:

.. code-block:: python

    >>> geom.integer_validator("age", (4,))
    Traceback (most recent call last):
        ...
    TypeError: age must be an integer

    >>> geom.integer_validator("age", [3])
    Traceback (most recent call last):
        ...
    TypeError: age must be an integer

    >>> geom.integer_validator("age", True)
    Traceback (most recent call last):
        ...
    TypeError: age must be an integer

    >>> geom.integer_validator("age", {3, 4})
    Traceback (most recent call last):
        ...
    TypeError: age must be an integer

    >>> geom.integer_validator("age", None)
    Traceback (most recent call last):
        ...
    TypeError: age must be an integer
