============================
How to use 0-add_integer.py
============================

This module defines functhion that add two numbers and return the result``add_integer(a, b=98)``.
===========================


``add_integer(...)``` returns the addition of its two arguments. For numbers,
that value is equivalent to using the ``+`` operator.


        Args:
            a (int or float) :the first number
            b (int or float) :the second number
        
        Returns:
            int : the product of a + b
==========================================================
    Can hendel integral and float numbers, but it tearn the float to integral.
        ::
            >>> add_integer = __import__('0-add_integer').add_integer
            >>> add_integer(1, 2)
            3

        ::
            >>> add_integer(0, 0)
            0

        ::
            >>> add_integer(-1, 2)
            1

        ::
            >>> add_integer(-1, -1)
            2

        ::
            >>> add_integer(1, 4645452434454324231)
            4645452434454324232
==========================================================
    Note that floats are casted to ints before addition is performed.
        ::
            >>> add_integer(5.8, 1.2)
            6
==========================================================
    The second argument is optional - by default, it is 98.
    ::
        >>> add_integer(2)
        100
==========================================================
    It make type error if a or b was not integral or float.
        ::
            >>> add_integer("1", 2)
            Traceback(most recent call last):
                ...
            ValueError: a must be an integer

        ::
            >>> add_integer(1, "2")
            Traceback(most recent call last):
                ...
            ValueError: b must be an integer

        ::
        >>> add_integer(None)
        Traceback (most recent call last):
        TypeError: a must be an integer

        ::
        >>> add_integer(2.3, None)
        Traceback (most recent call last):
        TypeError: b must be an integer
==========================================================
    Handel 0 args.
        ::
            >>> add_integer()
            98
