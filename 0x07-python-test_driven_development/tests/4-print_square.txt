============================
How to Use 4-print_square.py
============================
This module defines a square-printing function ``print_square(size)``.

Usage
=====
Squares are printed using the ``#`` character. The parameter ``size``
represents the height and width of the square.

    >>> print_square = __import__('4-print_square').print_square
    >>> print_square(1)
    #

    >>> print_square(4)
    ####
    ####
    ####
    ####

    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########

Additional Size Examples
=======================

    >>> print_square(2)
    ##
    ##

    >>> print_square(3)
    ###
    ###
    ###

    >>> print_square(5)
    #####
    #####
    #####
    #####
    #####

    >>> print_square(6)
    ######
    ######
    ######
    ######
    ######
    ######

    >>> print_square(7)
    #######
    #######
    #######
    #######
    #######
    #######
    #######

    >>> print_square(8)
    ########
    ########
    ########
    ########
    ########
    ########
    ########
    ########

    >>> print_square(9)
    #########
    #########
    #########
    #########
    #########
    #########
    #########
    #########
    #########

Large Squares
============

    >>> print_square(15)
    ###############
    ###############
    ###############
    ###############
    ###############
    ###############
    ###############
    ###############
    ###############
    ###############
    ###############
    ###############
    ###############
    ###############
    ###############

    >>> print_square(20)
    ####################
    ####################
    ####################
    ####################
    ####################
    ####################
    ####################
    ####################
    ####################
    ####################
    ####################
    ####################
    ####################
    ####################
    ####################
    ####################
    ####################
    ####################
    ####################
    ####################

Zero Size
=========
If ``size`` is zero, the function prints nothing.

    >>> print_square(0)

Invalid Sizes
=============
The parameter ``size`` must be an integer. Otherwise, a TypeError is raised.

    >>> print_square("not an int")
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square("5")
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square("")
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square("hello")
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square(5.5)
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square(1.0)
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square(0.0)
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square(-1.5)
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square(None)
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square(True)
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square(False)
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square([])
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square([5])
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square({})
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square({'size': 5})
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square((5,))
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square(complex(5, 0))
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square(complex(5, 2))
    Traceback (most recent call last):
    TypeError: size must be an integer

Special Float Values
===================

    >>> print_square(float('inf'))
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square(float('-inf'))
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square(float('nan'))
    Traceback (most recent call last):
    TypeError: size must be an integer

Negative Sizes
=============
If ``size`` is less than zero, a ValueError is raised.

    >>> print_square(-7)
    Traceback (most recent call last):
    ValueError: size must be >= 0

    >>> print_square(-1)
    Traceback (most recent call last):
    ValueError: size must be >= 0

    >>> print_square(-5)
    Traceback (most recent call last):
    ValueError: size must be >= 0

    >>> print_square(-10)
    Traceback (most recent call last):
    ValueError: size must be >= 0

    >>> print_square(-100)
    Traceback (most recent call last):
    ValueError: size must be >= 0

    >>> print_square(-999)
    Traceback (most recent call last):
    ValueError: size must be >= 0

Type vs Value Error Priority
===========================
Note that type-checking occurs before value-checking.

    >>> print_square(-7.5)
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square(-1.0)
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square(-0.5)
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square("-5")
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square([-5])
    Traceback (most recent call last):
    TypeError: size must be an integer

Missing Arguments
================
At least one argument must be provided.

    >>> print_square()
    Traceback (most recent call last):
    TypeError: print_square() missing 1 required positional argument: 'size'

Too Many Arguments
==================

    >>> print_square(5, 3)
    Traceback (most recent call last):
    TypeError: print_square() takes 1 positional argument but 2 were given

    >>> print_square(5, 3, 2)
    Traceback (most recent call last):
    TypeError: print_square() takes 1 positional argument but 3 were given

    >>> print_square(1, 2, 3, 4)
    Traceback (most recent call last):
    TypeError: print_square() takes 1 positional argument but 4 were given

Very Large Integers
==================

    >>> print_square(50)
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################
    ##################################################